swagger:  "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  version:      "0.0.1"
  title:        Statuspage API
  description:  |
                ## "The #1 status and incident communication tool."

                This is a Murano Service integration with
                [Statuspage](https://statuspage.io) to allow your Murano solution
                to maintain a separately hosted status page, and to manage incidents
                and notify users of status changes.
                [Signup at their site](https://manage.statuspage.io/signup) and
                enter the Page ID and User API Key, provided by StatusPage.io, below.
  contact:
    name:       Exosite Support
    email:      support@exosite.com

# Documentation.
externalDocs:
  description:  Statuspage API documentation
  url:          https://doers.statuspage.io/api/v1/
host:     api.statuspage.io

# The basePath is used to prefix all resource paths.
basePath: /v1

# The tags are categories referenced in documentation and the IoT Marketplace.
tags:
  - name:         Integration
    description:  Interface to communicate to the Statuspage API service

schemes:
  # The Statuspage REST API is served over HTTPS.
  - https

# Format of the responses to the client (Accepts).
produces:
  - application/json

################################################################################
#                      Service Configuration Parameters                        #
################################################################################
x-exosite-config-parameters:
  - name:         page_id
    description:  Statuspage Page ID
    type:         string
    required:     true
  - name:         user_api_key
    description:  Statuspage User API Key
    type:         string
    format:       password
    required:     true

parameters:
  IncidentId:
    name:         incident_id
    in:           path
    description:  Statuspage Incident ID
    required:     true
    type:         string
    #pattern:      ^[a-zA-Z0-9]+$
    #x-exosite-restricted: true

################################################################################
#                              API Authentication                              #
################################################################################
securityDefinitions:
  APIKeyHeader:
     type: apiKey
     name: Authorization
     in: header
     x-exosite-from: user_api_key
     # The Authorization header prefix is defined using x-exosite-prefix.
     #   E.g., curl -H "Authorization: OAuth {user_api_key}" ...
     x-exosite-prefix: OAuth

# Global security (applies to all operations): Always include the OAuth header.
security:
  - APIKeyHeader: []

################################################################################
#                                 Definitions                                  #
################################################################################

definitions:
  ErrorResponse:
    description: Request error
    type: object
    properties:
      error:
        type: string
        description: Error message

  pagesPageIdJson200HeroCover:
    #required:
    additionalProperties: true
    title: page_profile.hero_cover schema
    type: object
    description: Schema for successful response from page_profile method's hero_cover
    # MAYBE: Should we just use `additionalProperties`, and remove `properties`?
    #   additionalProperties: true
    properties:
      normal_url:
        type: string
        description: normal_url
      original_url:
        type: string
        description: original_url
      retina_url:
        type: string
        description: retina_url
      size:
        type: number
        description: size
      updated_at:
        type: string
        description: updated_at

  pagesPageIdJson200TransactionalLogo:
    #required:
    additionalProperties: true
    title: page_profile.transactional_logo schema
    type: object
    description: Schema for successful response from page_profile method's transactional_logo
    # MAYBE: Should we just use `additionalProperties`, and remove `properties`?
    #   additionalProperties: true
    properties:
      normal_url:
        type: string
        description: normal_url
      original_url:
        type: string
        description: original_url
      retina_url:
        type: string
        description: retina_url
      size:
        type: number
        description: size
      updated_at:
        type: string
        description: updated_at

  pagesPageIdJson200:
    #required:
    additionalProperties: true
    title: page_profile schema
    type: object
    description: Schema for successful response from page_profile method
    # MAYBE: Should we just use `additionalProperties`, and remove `properties`?
    #   additionalProperties: true
    properties:
      allow_email_subscriber:
        type: boolean
        description: allow_email_subscribers
      allow_incident_subscribers:
        type: boolean
        description: allow_incident_subscribers
      allow_page_subscribers:
        type: boolean
        description: allow_page_subscribers
      allow_sms_subscribers:
        type: boolean
        description: allow_sms_subscribers
      city:
        type: string
        description: city
      country:
        type: string
        description: country
      created_at:
        type: string
        description: created_at
      css_body_background_color:
        type: string
        description: css_body_background_color
      css_font_color:
        type: string
        description: css_font_color
      css_greens:
        type: string
        description: css_greens
      css_light_font_color:
        type: string
        description: css_light_font_color
      css_oranges:
        type: string
        description: css_oranges
      css_reds:
        type: string
        description: css_reds
      css_yellows:
        type: string
        description: css_yellows
      domain:
        type: string
        description: domain
      hero_cover:
        $ref: '#/definitions/pagesPageIdJson200HeroCover'
        description: hero_cover
      hidden_from_search:
        type: boolean
        description: hidden_from_search
      id:
        type: string
        description: id
      layout:
        type: string
        description: layout
      name:
        type: string
        description: name
      notifications_from_email:
        type: string
        description: notifications_from_email
      state:
        type: string
        description: state
      subdomain:
        type: string
        description: subdomain
      time_zone:
        type: string
        description: time_zone
      transactional_logo:
        $ref: '#/definitions/pagesPageIdJson200TransactionalLogo'
        description: transactional_logo
      twitter_username:
        type: string
        description: twitter_username
      updated_at:
        description: updated_at
      url:
        type: string
        description: url

  # FIXME: Can I list all the properties??
  Page:
    description: JSON Page Object. See https://doers.statuspage.io/api/v1/page_profile/
    type: object
    additionalProperties: true

  Incident:
    description: JSON Incident Object. See https://doers.statuspage.io/api/v1/incidents/#create-realtime
    type: object
    properties:
      incident[name]:
        type: string
        description: The name of the incident
      incident[status]:
        type: string
        enum:
          - investigating
          - identified
          - monitoring
          - resolved
        description: The status, one of investigating|identified|monitoring|resolved (optional, defaults to investigating if left blank)
      incident[body]:
        type: string
        description: The initial message, created as the first incident update (optional)
      incident[wants_twitter_update]:
        type: boolean
        description: Post the new incident to twitter (t or f, defaults to f)
      incident[impact_override]:
        type: string
        enum:
          - none
          - minor
          - major
          - critical
        description: Override calculated impact value, one of none|minor|major|critical (optional)
      incident[deliver_notifications]:
        type: boolean
        description: 'Control whether notifications should be delivered for the initial incident update (optional, default: true)'
      incident[component_ids]:
        type: array
        items:
          type: string
          description:  Component ID
        description:  List of components affected by the incident
      #incident[components]:
      #  type: object
      #  description: incident[components][component_id] - Map of status changes to apply to affected components.
    # Need additionalProperties to support object's with arbitrary key names,
    #   e.g., incident[components][<component_id>]=<...>.
    additionalProperties: true

################################################################################
#                                           Paths                              #
################################################################################
paths:
  /pages/{page_id}.json:
    parameters:
      - name:         page_id
        in:           path
        description:  Statuspage Page ID
        type:         string
        required:     true
        x-exosite-internal-use: true
    get:
      tags:
        - calls
      operationId:  getPageProfile
      summary:      Get your page profile
      description:  "Your page profile drives basic settings for your status page including your company name, notification preferences, and time zone."
      x-exosite-example: |
                    --#ENDPOINT GET /statuspage/getPageProfile

                    pageProfile = Statuspage.getPageProfile()

                    print(to_json(pageProfile))

                    response.message = pageProfile
      #parameters:
      responses:
        default:
          schema:
            $ref:   "#/definitions/ErrorResponse"
            description: Schema for error response from getPageProfile method.
          description: Example error response
          examples:
            application/json:
              error: The requested resource could not be found.
        200:
          schema:
            $ref: '#/definitions/pagesPageIdJson200'
            description: Schema for successful response from getPageProfile method.
          description: Example success response
          examples:
            application/json:
              allow_email_subscribers: true
              allow_incident_subscribers: true
              allow_page_subscribers: true
              allow_sms_subscribers: true
              city: "null"
              country: "null"
              created_at: 2013-02-20T17:22:25Z
              css_body_background_color: "null"
              css_font_color: "null"
              css_greens: "null"
              css_light_font_color: "null"
              css_oranges: "null"
              css_reds: "null"
              css_yellows: "null"
              domain: status.acmeapi.co
              hero_cover:
                normal_url: 
                original_url: 
                retina_url: 
                size: "null"
                updated_at: "null"
              hidden_from_search: false
              id: nlrtts14f89x
              layout: basic
              name: Acme API Co.
              notifications_from_email: "null"
              state: "null"
              subdomain: acmeapico
              time_zone: Mountain Time (US & Canada)
              transactional_logo:
                normal_url: 
                original_url: 
                retina_url: 
                size: "null"
                updated_at: "null"
              twitter_username: "null"
              updated_at: 2013-03-02T19:59:47Z
              url: http://www.acmeapi.co
    patch:
      operationId: updatePageProfile
      description: Update the page profile.
      x-exosite-example: |
                    --#ENDPOINT GET /statuspage/updatePageProfile

                    pp = Statuspage.updatePageProfile({page={url='https://exosite.io'}})

                    print(to_json(pp))

                    response.message = pp
      produces:
        - application/json
      parameters:
        # (lb): I'm not sure this is ideal, but it works.
        #   - My concern is the API def'n, at
        #       https://doers.statuspage.io/api/v1/page_profile/
        #     shows curl such as
        #       curl https://api.statuspage.io/v1/pages/qfn30z5r6s5h.json \
        #         -H "Authorization: OAuth XXXX" \
        #         -X PATCH \
        #         -d "page[allow_page_subscribers]=false" \
        #         -d "page[allow_incident_subscribers]=false" \
        #         -d "page[name]=Acme Corp"
        #     and I'm not sure how this `body` parameter makes that happen.
        #     But it works for me....
        #   - FIXME: If anything, it'd be nice to make it so user does not
        #     have to specify "body" in the call, e.g., here's what works
        #     for me:
        #       pp = Hashtagbusinessstatuspage.updatePageProfile(
        #              {page={url='https://exosite.io'}}
        #            )
        #   - FIXME: Note also the name of the service, which includes the
        #     business name, e.g., "Hashtagbusinessstatuspage". How do we
        #     avoid that? Or is that because I self-published under my
        #     business, and this won't be a concern if Exosite publishes
        #     the service?
        - name: body
          in: body
          description: JSON formatted page object
          required: true
          schema:
            $ref: "#/definitions/Page"
      responses:
        default:
          schema:
            $ref: "#/definitions/ErrorResponse"
            description: Schema for error response from updatePageProfile method.
          description: Example error response
          examples:
            application/json:
              error: The requested resource could not be found.
        200:
          schema:
            $ref: '#/definitions/pagesPageIdJson200'
            description: Schema for successful response from updatePageProfile method.
          description: Example success response
          examples:
            application/json:
              activity_score: 8
              allow_email_subscribers: true
              allow_incident_subscribers: true
              allow_page_subscribers: true
              allow_sms_subscribers: true
              allow_webhook_subscribers: false
              branding: "basic"
              created_at: "2018-08-13T18:29:10Z"
              css_blues: "3498DB"
              css_body_background_color: "ffffff"
              css_border_color: "E0E0E0"
              css_font_color: "333333"
              css_graph_color: "3498db"
              css_greens: "2fcc66"
              css_light_font_color: "AAAAAA"
              css_link_color: "3498db"
              css_oranges: "e67e22"
              css_reds: "e74c3c"
              css_yellows: "f1c40f"
              email_logo:
                normal_url: ""
                original_url: ""
                retina_url: ""
              favicon_logo:
                url: ""
              hero_cover:
                normal_url: ""
                original_url: ""
                retina_url: ""
              hidden_from_search: false
              id: "85f4v80q7nnp"
              name: "Exosite LLC"
              subdomain: "exositellc"
              time_zone: "UTC"
              transactional_logo:
                normal_url: ""
                original_url: ""
                retina_url: ""
              updated_at: "2018-08-13T22:03:13Z"
              url: "https://exosite.io"
              viewers_must_be_team_members: false

  /pages/{page_id}/incidents.json:
    parameters:
      - name:         page_id
        in:           path
        description:  Statuspage Page ID
        type:         string
        required:     true
        x-exosite-internal-use: true
    post:
      tags:
        - calls
      operationId:  createRealtimeIncident
      summary:      Create a realtime incident
      description:  Create a realtime incident
      x-exosite-example: |
                    --#ENDPOINT GET /statuspage/createRealtimeIncident

                    local incident_table = {}
                    incident_table['incident[name]'] = 'Slow response time'
                    incident = Statuspage.createRealtimeIncident(incident_table)

                    print(to_json(incident))

                    response.message = incident
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: JSON formatted page object
          required: true
          schema:
            $ref: "#/definitions/Incident"
      consumes:
        - application/x-www-form-urlencoded
      responses:
        default:
          # (lb): This default section is required, though not sure what it should contain.
          schema:
            $ref:   "#/definitions/ErrorResponse"
            description: Schema for error response from createRealtimeIncident method.
          description: Example error response
          examples:
            application/json:
              error: XXX.
        201:
          description: 'Successful incident creation'
        422:
          description: 'Validation failed (see errors in response body)'
          schema:
            $ref: '#/definitions/ErrorResponse'

  /pages/{page_id}/incidents/{incident_id}.json:
    parameters:
      - name:         page_id
        in:           path
        description:  Statuspage Page ID
        type:         string
        required:     true
        x-exosite-internal-use: true
      - $ref: "#/parameters/IncidentId"
    patch:
      tags:
        - calls
      operationId:  updateIncident
      summary:      Update an incident (only applies to realtime and scheduled incidents)
      description:  Update an incident (only applies to realtime and scheduled incidents)
      x-exosite-example: |
                    --#ENDPOINT GET /statuspage/updateIncident

                    local incident_table = {}
                    incident_table['incident[name]'] = 'Slow response time'
                    incident = Statuspage.createRealtimeIncident(incident_table)

                    incident_table['incident[name]'] = 'Slow response time (resolved)'
                    incident_table['incident[status]'] = 'resolved'
                    incident = Statuspage.updateIncident(incident.id, incident_table)

                    print(to_json(incident))

                    response.message = incident
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: JSON formatted Incident object
          required: true
          schema:
            $ref: "#/definitions/Incident"
            #type: object
            #description: The operation call containing the value to set.
            #properties:
            #  incident:
            #    type: object
            #    description: XXX
            #    additionalProperties: true
      consumes:
        - application/x-www-form-urlencoded
      responses:
        default:
          # (lb): This default section is required, though not sure what it should contain.
          schema:
            $ref:   "#/definitions/ErrorResponse"
            description: Schema for error response from createRealtimeIncident method.
          description: Example error response
          examples:
            application/json:
              error: XXX.
        200:
          description: 'Successful call'
        422:
          description: 'Validation failed (see errors in response body)'
          schema:
            $ref: '#/definitions/ErrorResponse'


